/**
 * Exit code returned when SIGINT causes termination.
 *
 * As per node docs[0], will be 128 + value of SIGINT (or 2
 * if not available).
 *
 * [0]: https://nodejs.org/dist/latest-v6.x/docs/api/process.html#process_exit_codes
 */
export declare const sigintExitCode: number;
/**
 * Object that releases resources when "dispose" is invoked.
 */
export interface Disposable {
    /**
     * Releases any resources held by the implementing object.
     */
    dispose(): void;
}
/**
 * Prints a message indicating Ctrl+C was pressed then exits the process.
 *
 * Exit code will be value of "sigintExitCode".
 */
export declare function defaultCtrlCHandler(): void;
/**
 * Monitors Ctrl+C and executes a callback instead of SIGINT.
 *
 * When invoked, this listens to keypresses on STDIN,
 * which prevents normal process termination. To ensure
 * your program terminates properly if Ctrl+C is NOT
 * pressed, call the "dispose" method on the object
 * returned by this function when your process is
 * completed.
 *
 * NOTE: This should only be used by programs that do
 * not normally read from STDIN.
 *
 * @param {Function} onCtrlC
 *     Callback function to execute on Ctrl+C.
 *     @default "defaultCtrlCHandler"
 * @returns
 *     Disposable object that restores STDIN to its previous
 *     state, allowing for proper process termination.
 */
export declare function monitorCtrlC(onCtrlC?: () => any): Disposable;
